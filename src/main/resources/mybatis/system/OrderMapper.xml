<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.fh.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="flow_id" property="flowId" jdbcType="VARCHAR" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="business_man_id" property="businessManId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, flow_id, total_price, user_id, created_date, pay_time, business_man_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bus_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bus_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fh.entity.Order" useGeneratedKeys="true" keyProperty="id">
    insert into bus_order (id, flow_id, total_price, 
      user_id, created_date, pay_time, 
      business_man_id)
    values (#{id,jdbcType=BIGINT}, #{flowId,jdbcType=VARCHAR}, #{totalPrice,jdbcType=DECIMAL}, 
      #{userId,jdbcType=BIGINT}, #{createdDate,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{businessManId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fh.entity.Order" >
    insert into bus_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flowId != null" >
        flow_id,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="businessManId != null" >
        business_man_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="flowId != null" >
        #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessManId != null" >
        #{businessManId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fh.entity.Order" >
    update bus_order
    <set >
      <if test="flowId != null" >
        flow_id = #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessManId != null" >
        business_man_id = #{businessManId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fh.entity.Order" >
    update bus_order
    set flow_id = #{flowId,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      business_man_id = #{businessManId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>