<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.dao.OrderDetailMapper">
	<resultMap id="BaseResultMap" type="com.fh.entity.OrderDetail">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="flow_id" property="flowId" jdbcType="VARCHAR" />
		<result column="deal_price" property="dealPrice" jdbcType="DECIMAL" />
		<result column="order_id" property="orderId" jdbcType="BIGINT" />
		<result column="product_id" property="productId" jdbcType="BIGINT" />
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, flow_id, deal_price, order_id, product_id, count
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from bus_order_detail
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from bus_order_detail
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.fh.entity.OrderDetail">
		insert into bus_order_detail (id, flow_id, deal_price,
		order_id, product_id, count
		)
		values (#{id,jdbcType=BIGINT}, #{flowId,jdbcType=VARCHAR},
		#{dealPrice,jdbcType=DECIMAL},
		#{orderId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.fh.entity.OrderDetail">
		insert into bus_order_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="flowId != null">
				flow_id,
			</if>
			<if test="dealPrice != null">
				deal_price,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="count != null">
				count,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="flowId != null">
				#{flowId,jdbcType=VARCHAR},
			</if>
			<if test="dealPrice != null">
				#{dealPrice,jdbcType=DECIMAL},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=BIGINT},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=BIGINT},
			</if>
			<if test="count != null">
				#{count,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.fh.entity.OrderDetail">
		update bus_order_detail
		<set>
			<if test="flowId != null">
				flow_id = #{flowId,jdbcType=VARCHAR},
			</if>
			<if test="dealPrice != null">
				deal_price = #{dealPrice,jdbcType=DECIMAL},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=BIGINT},
			</if>
			<if test="productId != null">
				product_id = #{productId,jdbcType=BIGINT},
			</if>
			<if test="count != null">
				count = #{count,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fh.entity.OrderDetail">
		update bus_order_detail
		set flow_id = #{flowId,jdbcType=VARCHAR},
		deal_price = #{dealPrice,jdbcType=DECIMAL},
		order_id = #{orderId,jdbcType=BIGINT},
		product_id = #{productId,jdbcType=BIGINT},
		count = #{count,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 修改订单明细 -->
	<update id="editOrderDetail" parameterType="pd">
		update BUS_ORDER_Detail
		<set>
			<if test="flow_id != null and flow_id != ''">
				flow_id = #{flow_id},
			</if>
			<if test="price != null and price != ''">
				price = #{price},
			</if>
			<if test="order_id != null and order_id != ''">
				order_id =
				#{order_id},
			</if>
			<if test="product_id != null and product_id != ''">
				USER_ID = #{USER_ID},
			</if>
		</set>
		where
		ID = #{ID}
	</update>

	<!-- 通过id获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		id,
		flow_id,
		price,
		order_id,
		product_id
		from
		BUS_ORDER_Detail
		where
		id = #{id}
	</select>

	<!-- 订单明细列表（分页） -->
	<select id="orderDetailListPage" parameterType="page"
		resultType="pd">
		select o.id,
		o.flow_id,
		o.price,
		o.order_id,
		o.created_date,
		a.username,
		p.name
		from
		bus_order_detail o,bus_order b, bus_product p,sys_app_user
		a
		where o.product_id = p.id AND o.order_id = b.id and
		b.user_id =
		a.user_id
		<!-- 用户名检索 -->
		<if test="pd.username != null and pd.username != ''">
			and
			a.username LIKE CONCAT(CONCAT('%', #{pd.username}),'%')
		</if>
		<!-- 产品名称检索 -->
		<if test="pd.productname != null and pd.productname != ''">
			and p.name LIKE CONCAT(CONCAT('%', #{pd.productname}),'%')
		</if>
		<!-- 到期时间检索 -->
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''">
			and o.CREATED_DATE &gt;= #{pd.lastLoginStart}
		</if>
		<!-- 到期时间检索 -->
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''">
			and o.CREATED_DATE &lt;= #{pd.lastLoginEnd}
		</if>
		<if test="pd.flow_id != null and pd.flow_id != ''"><!-- 状态检索 -->
			and o.flow_id=#{pd.flow_id}
		</if>
	</select>

	<!-- 订单明细列表(全部) -->
	<select id="listAllOrders" parameterType="pd" resultType="pd">
		select
		o.id,
		o.flow_id,
		o.price,
		o.order_id,
		o.created_date,
		a.username,
		p.name
		from
		bus_order_detail o,bus_order b, bus_product p,sys_app_user
		a
		where
		o.product_id = p.id AND o.order_id = b.id and
		b.user_id =
		a.user_id
	</select>

	<!-- 删除订单明细 -->
	<delete id="deleteOrderDetail" parameterType="pd">
		delete from
		BUS_ORDER_DETAIL
		where
		ID = #{ID}
	</delete>

	<!-- 批量删除订单明细 -->
	<delete id="deleteAllOrderDetails" parameterType="String">
		delete from BUS_ORDER_DETAIL
		where
		ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>